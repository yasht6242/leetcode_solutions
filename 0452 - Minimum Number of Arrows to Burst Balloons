class Solution {
public:
    int findMinArrowShots(vector<vector<int>>& points) {
        if (points.empty()) {
        return 0;
    }

    // Sort the balloons based on their end points
    sort(points.begin(), points.end(), [](const vector<int>& a, const vector<int>& b) {
        return a[1] < b[1];
    });

    int arrows = 1;
    int end = points[0][1];

    for (int i = 1; i < points.size(); ++i) {
        if (points[i][0] > end) {
            // Need to shoot another arrow since the next balloon is not covered by the current arrow
            arrows++;
            end = points[i][1];
        }
    }

    return arrows;
    }
};
